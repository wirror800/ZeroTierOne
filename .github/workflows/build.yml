on:
  push:
    tags:
      - v[0-9]+.*
jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: gitconfig
      run: |
        git config --global core.autocrlf input
      #        git config --global core.eol lf
    - name: checkout
      uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-apple-darwin
        override: true
        components: rustfmt, clippy

    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: make
      run: make
    - name: selftest
      run: |
        make selftest
        ./zerotier-selftest
    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        target_commitish: ${{ github.sha }}
        tag_name: ${{ github.event.inputs.tag_name }}
        name: ${{ github.event.inputs.release_name }}
        body: ${{ github.event.inputs.release_notes }}
        draft: false
        prerelease: false
        files: |
          zerotier-one
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  build_macos:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
    - name: gitconfig
      run: |
        git config --global core.autocrlf input
      #        git config --global core.eol lf
    - name: checkout
      uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-apple-darwin
        override: true
        components: rustfmt, clippy
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: make
      run: make
    - name: selftest
      run: |
        make selftest
        ./zerotier-selftest
    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        target_commitish: ${{ github.sha }}
        tag_name: ${{ github.event.inputs.tag_name }}
        name: ${{ github.event.inputs.release_name }}
        body: ${{ github.event.inputs.release_notes }}
        draft: false
        prerelease: false
        files: |
          zerotier-one
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  build_windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
    - name: gitconfig
      run: |
        git config --global core.autocrlf true
      #        git config --global core.eol lf
    - name: checkout
      uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-apple-darwin
        override: true
        components: rustfmt, clippy
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: setup msbuild
      uses: microsoft/setup-msbuild@v1.1.3
    - name: msbuild
      run: |
        msbuild windows\ZeroTierOne.sln /m /p:Configuration=Release  /property:Platform=x64 /t:ZeroTierOne:Rebuild
        # 7z a -tzip "${release_name}.zip" "./windows/Release/*" "./windows/ZeroTierOne/Release/*" "ZeroTier One.msi"
        # powershell
        Compress-Archive -CompressionLevel Optimal -Force -Path ".\windows\Release\*.*",".\windows\ZeroTierOne\Release\*.*",".\ZeroTier One.msi" -DestinationPath zerotier-one-x86_64-pc-windows-msvc.zip
    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        target_commitish: ${{ github.sha }}
        tag_name: ${{ github.event.inputs.tag_name }}
        name: ${{ github.event.inputs.release_name }}
        body: ${{ github.event.inputs.release_notes }}
        draft: false
        prerelease: false
        files: |
          zerotier-one-x86_64-pc-windows-msvc.zip
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
